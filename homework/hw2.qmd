---
title: "MATH-472: Homework 2"
author: "Andrew Moore"
date: "2/9/23"
knitr:
  opts_chunk: 
    echo: true
    warning: false
    message: false
format:
  pdf:
    include-in-header:
      text: |
        \usepackage{cancel}
---

# Question 1

<!-- Write an R function to calculate $\Gamma(n)$ for any positive integer $n$. You cannot use the built-in gamma function in R. -->

The definition of the Gamma function where $n \in \mathbb{Z}^{+}$ is
$$
\Gamma(n) = (n - 1)!
$$

This can be replicated in R using the `factorial()` function.

```{r}
posint_gamma <- function(n) {
  if (any(!is.integer(n) | n <= 0)) stop("n must be a positive integer.")
  
  factorial(n - 1)
}

all(posint_gamma(1:4) == gamma(1:4))
```

\newpage
# Question 2

We have 
$$
f(x; p) = \begin{cases}
  p(1 - p)^x, x = 0, 1, 2, 3, \cdots \\
  0, \text{ otherwise.}
\end{cases}
$$

We want the recursive formula for $f(x + 1; p) = L \cdot f(x; p).$

Solving for $L$, we see
\begin{align*}
  f(x + 1; p) &= L \cdot f(x; p) \\
  p(1 - p)^{(x + 1)} &= L \cdot p(1 - p)^x \\
  p(1 - p)^x(1 - p)^1 &= L \cdot p(1 - p)^x \\
  (1 - p) &= L.
\end{align*}

\newpage
# Question 3

Let $X$ be a discrete R.V. where $x_1 = 10, x_2 = 30, x_3 = 50, x_4 = 70, x_5 = 90$, and having the following cdf:

|         $X$          | 10   | 30   | 50   | 70   | 90   |
| :------------------: | :--: | :--: | :--: | :--: | :--: |
| $F(x) = P(X \leq x)$ | 0.27 | 0.41 | 0.64 | 0.92 | 1.00 |

<!-- step 1. generate u ~ U(0, 1) -->
<!-- step 2. assign X = x_i if F(x_i - 1) < u <= F(x_i) -->

```{r}
set.seed(20230208)

f <- function(print_check = FALSE) {
  u <- runif(1, 0, 1)
  x <- c(10, 30, 50, 70, 90)
  p <- c(0.27, 0.41, 0.64, 0.92, 1)
  keep <- dplyr::lag(p, default = 0) < u & u <= p

  if (print_check) print(data.frame(x, p, u, keep))

  x[keep]
}

f(print_check = TRUE) # run once as an example

x <- replicate(10000, f()) # examine the distribution, take 10k samples
x |> table() |> prop.table() |> cumsum() |> round(2)
```

\newpage
# Question 4

(a) Calculate the inverse function of $u = F(x)$, i.e., $F^{-1}_X(u) = x.$

\begin{align*}
  F(x) = u &\implies 1 - e^{-(0.25x^3)} = u \\
           &\implies 1 - u = e^{-(0.25x^3)} \\
           &\implies ln(1 - u) = -\frac{1}{4}x^3 \\
           &\implies -4ln(1 - u) = x^3 \\
           &\implies (-4ln(1 - u))^{\frac{1}{3}} = x \\
           &\implies F^{-1}_X(u) = x.
\end{align*}

(b) Calculate values of $x$ for $u = 0.37, 0.45, 0.82.$

```{r}
f_inv <- function(u) (-4*log(1 - u))^(1/3)

f_inv(c(0.37, 0.45, 0.82)) |> round(digits = 5)
```

\newpage
# Question 5

The Rayleigh density is
$$
f(x) = \frac{x}{\sigma^2}e^{-x^2 / 2\sigma^2}, x \geq 0, \sigma > 0.
$$

Develop an algorithm to generate random samples from a $Rayleigh(\sigma)$ distribution. Generate samples for several choices of $\sigma > 0$ and check that the mode of the generated samples is close to the theoretical mode $\sigma$ (check the histogram).

We will use the inverse-transformation method. First, we need to find the cdf $F_X(x)$:
\begin{align*}
  F_X(x) &= \int_{-\infty}^x f(t)\ dt \\
         &= \int_{-\infty}^0 0\ dt + \int_0^x \frac{t}{\sigma^2} e^{-t^2 / 2\sigma^2}\ dt \\
         &= \int_0^x \frac{t}{\sigma^2} e^{-t^2 / 2\sigma^2}\ dt \\
         &= -\int_0^x e^u\ du \tag{let $u = \frac{-t}{2\sigma^2}$ and $du = \frac{-t}{\sigma^2}\ dt$} \\
         &= -e^u\ \Bigg|_{t=0}^{t=x} \\
         &= -e^{\frac{-t^2}{2\sigma^2}}\ \Bigg|_{t=0}^{t=x} = \Bigl(-e^{\frac{-x^2}{2\sigma^2}} - (-1) \Bigr) = 1 - e^{\frac{-x^2}{2\sigma^2}}, x \geq 0, \sigma > 0.
\end{align*}

We now need to find $F_X^{-1}(u) = x$:
\begin{align*}
  F_X(x) = u &\implies 1 - e^{-x^2}{2\sigma^2} = u \\
             &\implies 1 - u = e^{-x^2}{2\sigma^2} \\
             &\implies -2\sigma^2 ln(1 - u) = x^2 \\
             &\implies \sqrt{-2\sigma^2 ln(1 - u)} = x \\
             &\implies F_X^{-1}(u) = x.
\end{align*}

We can then apply the algorithm:

1. Generate $u \sim U(0, 1)$
2. Compute $X'(u) = F_X^{-1}(u)$ to get realizations from $X$.

Demonstrations with several values of $\sigma$, using R.
```{r}
library(tidyverse)
library(patchwork)

finv <- function(u, sigma) sqrt(-2*sigma^2 * log(1- u))

gen_density <- function(n = 1000, sigma = 1) {
  dat <- tibble(u = runif(n, 0, 1), x = finv(u, sigma))

  ggplot(dat, aes(x = x)) +
    geom_vline(xintercept = sigma, lty = "dotted") +
    geom_density() +
    labs(title = str_glue("Sigma = {sigma}"), x = "x", y = "") +
    theme_minimal(base_size = 11) +
    theme(
      axis.text.y = element_blank(),
      panel.grid.minor = element_blank(), panel.grid.major.y = element_blank()
    )
}

(gen_density(sigma = 1) | gen_density(sigma = 2) | gen_density(sigma = 3)) /
  (gen_density(sigma = 4) | gen_density(sigma = 5) | gen_density(sigma = 6))
```

\newpage
# Question 6

We have $f(x) = \frac{1}{2}e^{-|x|}.$ This function is symmetric around 0. So, the resulting cdf $F_X(x)$ will be a piecewise function. If $x < 0,$ we have
\begin{align*}
  \int_{-\infty}^x f(t)\ dt &= \int_{-\infty}^x \frac{1}{2} e^{-|t|}\ dt \\
  &= \frac{1}{2} \int_{-\infty}^x e^t\ dt \tag{because $-\infty < t < 0$} \\
  &= \frac{1}{2} e^t \Bigg|_{-\infty}^x \\
  &= \lim_{n \to -\infty} \frac{1}{2} e^t \Bigg|_n^x \\
  &= \lim_{n \to -\infty} \frac{1}{2}(e^x - e^n) \\
  &= \lim_{n \to -\infty} \frac{1}{2}e^x - \cancelto{0}{\frac{1}{2}e^n} \\
  &= \frac{1}{2}e^x.
\end{align*}

Note that $\int_{-\infty}^0 f(x)\ dx = \frac{1}{2}$ because
\begin{align*}
  \int_{-\infty}^0 f(x)\ dx &= \int_{-\infty}^0 \frac{1}{2} e^{-|x|}\ dx \\
  &= \frac{1}{2} \int_{-\infty}^0 e^x\ dx \tag{because $-\infty < x < 0$} \\
  &= \frac{1}{2} e^x \Bigg|_{-\infty}^0 \\
  &= \lim_{n \to -\infty} \frac{1}{2} e^x \Bigg|_n^0 \\
  &= \lim_{n \to -\infty} \frac{1}{2}(e^0 - e^n) \\
  &= \lim_{n \to -\infty} \frac{1}{2} - \cancelto{0}{\frac{1}{2}e^n} \\
  &= \frac{1}{2}.
\end{align*}

Now, if $x \geq 0$, we have
\begin{align*}
  \int_{-\infty}^0 f(t)\ dt + \int_0^x f(t)\ dt &= \frac{1}{2} + \frac{1}{2}\int_0^x e^{-|t|}\ dt \\
  &= \frac{1}{2} + \frac{1}{2}\int_0^x e^{-t}\ dt \tag{because $0 \leq t \leq x$} \\
  &= \frac{1}{2} - \frac{1}{2} e^{-t} \Bigg|_0^x \\
  &= \frac{1}{2} - \frac{1}{2}(e^{-x} - e^0) \\
  &= \frac{1}{2} + \frac{1}{2} - \frac{1}{2}e^{-x} \\
  &= 1 - \frac{1}{2}e^{-x}.
\end{align*}

Thus, $F_X(x)$ is defined as
$$
F_X(x) = \begin{cases}
  \frac{1}{2}e^x, & x < 0 \\
  1 - \frac{1}{2}e^{-x}, & x \geq0
\end{cases}
$$

and given some $x$, we have $F_X(x) = u$. We now need an inverse $F_X^{-1}(u)$ satisfying $F_X^{-1}(u) = x$. This function will also be piecewise.

If $x < 0$
\begin{align*}
  F_X(x) &= \frac{1}{2}e^x = u \\
         &\implies e^x = 2u \\
         &\implies x = ln(2u.)
\end{align*}

If $x \geq 0$
\begin{align*}
  F_X(x) &= 1 - \frac{1}{2} e^{-x} = u \\
         &\implies \frac{1}{2}e^{-x} = 1 - u \\
         &\implies e^{-x} = 2 - 2u \\
         &\implies -x = ln(2 - 2u) \\
         &\implies x = -ln(2 - 2u).
\end{align*}

So
$$
F_X^{-1}(u) = \begin{cases}
  ln(2u) & u < 0.5 \\
  -ln(2 - 2u) & u \geq 0.5.
\end{cases}
$$

Now we can apply the algorithm

1. Generate $u \sim U(0, 1)$
2. Compute $X'(u) = F_X^{-1}(u)$ to get realizations from $X$.

Implemented in R code, to generate 1,000 realizations.

```{r}
finv <- function(u) ifelse(u < 0.5, log(2*u), -log(2 - 2*u))
lapl <- function(n = 1000) finv(runif(n, 0, 1))

ggplot(tibble(x = lapl())) +
  geom_density(aes(x = x)) +
  theme_minimal(base_size = 11) +
  theme(
    axis.text.y = element_blank(),
    panel.grid.minor = element_blank(), panel.grid.major.y = element_blank()
  ) +
  labs(y = "", title = "Density plot of 1,000 draws")
```

\newpage
# Question 7

We will use the Box-Mueller Transform to generate samples from standard normal distributions.

```{r}
bmt <- function(n) {
  u1 <- runif(n, 0, 1)
  u2 <- runif(n, 0, 1)

  r <- sqrt(-2*log(u1))
  theta <- 2*pi*u2
  x <- r*cos(theta)
  y <- r*sin(theta)

  data.frame(x, y)
}
```

## (a)

10 values from $\chi^2(5).$

```{r}
dat <- bmt(25)

indices <- seq(1, 25, 5)
chi <- numeric()
for (element in indices) {
  x2 <- c(sum(dat$x[element:element + 4]^2), sum(dat$y[element:element + 4]^2))
  chi <- c(chi, x2)
}

print(chi)
```

## (b)

10 values from $t(3).$

```{r}
dat <- bmt(30)

z <- dat$x[1:10]
v <- numeric()
q <- 3

indices <- seq(1, q * 10, q)
for (element in indices) {
  x2 <- sum(dat$y[element:element + (q - 1)]^2)
  v <- c(v, x2)
}

z / sqrt(v / q)
```

## (c)

10 values from $F(6, 10).$

```{r}
dat <- bmt(100)

v <- numeric()
m <- 6
vind <- seq(1, m * 10, m)
for (element in vind) {
  x2 <- sum(dat$x[element:element + (m - 1)]^2)
  v <- c(v, x2)
}

w <- numeric()
n <- 10
wind <- seq(1, n * 10, n)
for (element in wind) {
  x2 <- sum(dat$y[element:element + (n - 1)]^2)
  w <- c(w, x2)
} 

(v / m) / (w / n)
```
